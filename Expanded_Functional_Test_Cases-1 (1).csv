Test Case ID,Test Scenario,Preconditions,Test Steps,Expected Result,Actual Result,Status
TC_001,Verify report generation via CCS and notification sent to API Banking,CCS should be configured and active.,"['1. Generate a report in CCS.', '2. Verify if the report is stored in FMS.', '3. Check if CCS sends a notification via KAFKA to API Banking.', '4. Ensure API Banking stores only metadata information in reporting DB.']","Report should be stored in FMS, and metadata should be available in API Banking.",,Pending
TC_002,Fetch report from FMS using API Banking,Report should already be available in FMS and metadata stored in API Banking.,"['1. Client requests report download via API.', '2. Verify if API Banking fetches metadata and requests the correct report from FMS.', '3. Confirm the report is correctly delivered to the client.']",Report should be retrieved from FMS and delivered to the client successfully.,,Pending
TC_003,Error handling when report is not found in FMS,"Metadata exists in API Banking, but report is missing in FMS.","['1. Client requests a report that is not present in FMS.', '2. Verify if API Banking checks metadata and identifies the missing report.', '3. Ensure API Banking returns an appropriate error message to the client.']",API Banking should return a user-friendly error indicating that the report is unavailable.,,Pending
TC_004,Verify handling of large-size reports,CCS should support large file sizes and FMS storage should be available.,"['1. Generate a large report (above 1MB).', '2. Ensure CCS successfully sends the report to FMS.', '3. Verify that API Banking processes metadata without size limitations.']","Large reports should be handled without failures, and metadata should be stored properly.",,Pending
TC_005,Verify report metadata fields are correctly stored and retrieved,CCS should send metadata to API Banking for reports stored in FMS.,"['1. Generate a report and check the metadata fields sent by CCS.', '2. Verify if API Banking stores all mandatory metadata fields (FMS Id, Message ID, Group ID, etc.).', '3. Fetch metadata via API and confirm the integrity of stored data.']", ,,Pending
TC_006,Verify the successful processing of reports from multiple downstream sources,Reports should be generated from both CCS and RMCS.,"['1. Generate reports from CCS and RMCS.', '2. Verify both reports are delivered to FMS.', '3. Check if API Banking receives notifications for both reports.', '4. Ensure metadata from both sources is correctly stored in API Banking.']",Reports from multiple sources should be processed without discrepancies.,,Pending
TC_007,Verify the impact of duplicate report metadata,API Banking already has metadata stored for a report.,"['1. Attempt to send the same report metadata again.', '2. Check if API Banking correctly identifies duplicate entries.', '3. Verify if API Banking prevents duplication or handles overwriting logically.']","Duplicate metadata should be prevented, or an appropriate overwrite mechanism should be in place.",,Pending
TC_008,Verify API Banking behavior when FMS is down,Temporarily disable FMS services.,"['1. Generate a report and send it to FMS.', '2. Attempt to fetch the report via API Banking.', '3. Verify if API Banking detects the FMS downtime.', '4. Ensure API Banking returns a meaningful error message to the client.']",API Banking should gracefully handle FMS downtime and notify the client.,,Pending
TC_009,Verify report retrieval time and performance,Reports should already exist in FMS.,"['1. Measure the time taken for API Banking to fetch reports.', '2. Compare against acceptable response time benchmarks.', '3. Verify performance under high load conditions (e.g., concurrent report requests).']","Report retrieval should be within acceptable response times, even under load.",,Pending
TC_010,Verify logging and audit trail for report transactions,Logging should be enabled for API Banking.,"['1. Generate a report and send it through the system.', '2. Fetch the report via API Banking.', '3. Check system logs for each step (report generation, storage, retrieval).', '4. Ensure timestamps and transaction details are properly recorded.']",All report transactions should have a proper audit trail for tracking and compliance.,,Pending
TC_011,Verify error handling for malformed metadata,Manually modify metadata fields with invalid or missing values.,"['1. Send a report with incorrect metadata fields.', '2. Check if API Banking validates the metadata.', '3. Verify that API Banking rejects or corrects malformed metadata before processing.']",Malformed metadata should be identified and appropriately handled to prevent system issues.,,Pending
TC_012,Verify integration with downstream clients consuming reports,Clients should be registered for report retrieval.,"['1. Generate reports and send notifications.', '2. Ensure clients can successfully call API Banking to fetch reports.', '3. Validate that the reports are received in the correct format.', '4. Check if any integration failures are logged and notified.']","Clients should be able to consume reports without errors, and integration issues should be logged.",,Pending
TC_013,Verify security access control for report downloads,Access control rules should be configured for report access.,"['1. Attempt to fetch a report as an unauthorized user.', '2. Verify that API Banking restricts access.', '3. Attempt to fetch a report as an authorized user.', '4. Ensure authorized users can retrieve reports successfully.']","Unauthorized access should be blocked, while authorized access should function correctly.",,Pending
TC_014,Verify the handling of expired reports,Reports should have expiration rules configured.,"['1. Generate a report and store it in FMS.', '2. Wait until the report expiration period elapses.', '3. Attempt to retrieve the expired report via API Banking.', '4. Verify if API Banking returns the correct expiration error message.']","Expired reports should not be retrievable, and a relevant error should be returned.",,Pending
TC_015,Verify data integrity checks during report retrieval,Reports should be stored with file integrity checksums.,"['1. Fetch a report via API Banking.', '2. Compare retrieved report checksum with the stored checksum.', '3. Verify that data integrity is maintained.', '4. If discrepancies exist, API Banking should return an integrity error.']","Report integrity should be maintained during retrieval, and errors should be flagged for discrepancies.",,Pending
